{"proved": true, "proof_script": "lemma nba_igbg_ahs: \"nba_igbg A = \\<lparr> g_V = UNIV, g_E = E_of_succ (\\<lambda> p. CAST ((\\<Union> a \\<in> alphabet A. transition A a p ::: \\<langle>S\\<rangle> list_set_rel) ::: \\<langle>S\\<rangle> ahs_rel bhc)), g_V0 = initial A, igbg_num_acc = 1, igbg_acc = \\<lambda> p. if accepting A p then {0} else {} \\<rparr>\"\nunfolding nba_igbg_def CAST_def id_apply autoref_tag_defs\nunfolding nba_g_def\napply (simp_all add: ext)\napply (simp add: graph_rec.extend_def)\nunfolding E_of_succ_def\nby auto", "proof_length": 6, "agent_info": {"prediction_time": 208.01862049102783, "isabelle_time": 114.93366122245789, "problem_loading_time": 4.192203760147095, "proof_length": 6, "successful_proof": "lemma nba_igbg_ahs: \"nba_igbg A = \\<lparr> g_V = UNIV, g_E = E_of_succ (\\<lambda> p. CAST ((\\<Union> a \\<in> alphabet A. transition A a p ::: \\<langle>S\\<rangle> list_set_rel) ::: \\<langle>S\\<rangle> ahs_rel bhc)), g_V0 = initial A, igbg_num_acc = 1, igbg_acc = \\<lambda> p. if accepting A p then {0} else {} \\<rparr>\"\nunfolding nba_igbg_def CAST_def id_apply autoref_tag_defs\nunfolding nba_g_def\napply (simp_all add: ext)\napply (simp add: graph_rec.extend_def)\nunfolding E_of_succ_def\nby auto", "result": "proved"}}